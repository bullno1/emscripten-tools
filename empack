#!/usr/bin/env python

from os import path
import sys
import zipfile
import gzip
import argparse

SHELL_STATIC_FILES = [
    "shell/logo.svg",
    "shell/shell.css",
]

def main(argv: list[str]) -> int:
    parser = argparse.ArgumentParser(
        prog='empack',
        description='Package an emscripten project',
    )
    parser.add_argument(
        "input",
        help="Path to the input .js or .wasm file",
    )
    parser.add_argument(
        "output",
        help="Path to the output .zip file",
    )
    args = parser.parse_args()

    basename = path.splitext(args.input)[0]
    project_name = path.basename(basename)

    with zipfile.ZipFile(
        file=args.output,
        mode='w',
        compression=zipfile.ZIP_DEFLATED,
    ) as archive:
        print(f"Packing {basename}.js")
        archive.write(basename + ".js", project_name + ".js")

        print(f"Packing {basename}.wasm")
        with open(basename + ".wasm", "rb") as wasm_file:
            wasm = wasm_file.read()
        archive.writestr(
            project_name + ".wasmz",
            data=gzip.compress(wasm),
            compress_type=zipfile.ZIP_STORED
        )

        if path.exists(basename + ".data"):
            print(f"Packing {basename}.data")
            archive.write(basename + ".data", project_name + ".data.pck")

        if path.exists(basename + ".wasm.debug.wasm"):
            print(f"Packing {basename}.wasm.debug.wasm")
            archive.write(basename + ".wasm.debug.wasm", project_name + ".wasm.debug.wasm")

        archive.mkdir("shell")
        script_dir = path.dirname(__file__)
        for file in SHELL_STATIC_FILES:
            file_path = path.join(script_dir, file)
            print(f"Packing {file_path}")
            archive.write(file_path, file)

        pack_templated(
            archive,
            "index.html",
            path.join(script_dir, "shell/index.html"),
            {
                "SCRIPT_NAME": project_name + ".js"
            }
        )
        pack_templated(
            archive,
            "shell/shell.js",
            path.join(script_dir, "shell/shell.js"),
            {
                "UNPACKED_WASM_SIZE": str(len(wasm))
            }
        )


def pack_templated(
    archive: zipfile.ZipFile,
    arc_name: str,
    template_file_path: str,
    template_params: dict[str, str]
) -> None:
    print(f"Packing {template_file_path}")
    with open(template_file_path, "r") as template_file:
        template_str = template_file.read()

    for k, v in template_params.items():
        template_str = template_str.replace("{{" + k + "}}", v)

    archive.writestr(arc_name, data=template_str)

if __name__ == "__main__":
    sys.exit(main(sys.argv))
