#!/usr/bin/env python

from os import path
import sys
import zipfile
import gzip

SHELL_FILES = [
    "emscripten/logo.svg",
    "emscripten/shell.css",
]

def main(argv: list[str]) -> int:
    if len(argv) != 3:
        print(f"Usage: {argv[0]} <file.html> <ouptut.zip>")
        return 1

    input = argv[1]
    output = argv[2]

    basename = path.splitext(input)[0]
    project_name = path.basename(basename)

    with zipfile.ZipFile(
        file=output,
        mode='w',
        compression=zipfile.ZIP_DEFLATED,
    ) as archive:
        print(f"Packing {basename}.html")
        archive.write(basename + ".html", "index.html")

        print(f"Packing {basename}.js")
        archive.write(basename + ".js", project_name + ".js")

        print(f"Packing {basename}.wasm")
        with open(basename + ".wasm", "rb") as wasm_file:
            wasm = wasm_file.read()
        archive.writestr(
            project_name + ".wasmz",
            data=gzip.compress(wasm),
            compress_type=zipfile.ZIP_STORED
        )

        print(f"Packing {basename}.data")
        if path.exists(basename + ".data"):
            archive.write(basename + ".data", project_name + ".data.pck")

        print(f"Packing {basename}.wasm.debug.wasm")
        if path.exists(basename + ".wasm.debug.wasm"):
            archive.write(basename + ".wasm.debug.wasm", project_name + ".wasm.debug.wasm")

        archive.mkdir("emscripten")
        script_dir = path.dirname(__file__)
        for file in SHELL_FILES:
            file_path = path.join(script_dir, file)
            print(f"Packing {file_path}")
            archive.write(file_path, file)

        shell_js_path = path.join(script_dir, "emscripten/shell.js")
        print(f"Packing {shell_js_path}")
        with open(shell_js_path, "r") as js_file:
            shell_js = js_file.read()

        archive.writestr(
            "emscripten/shell.js",
            data=shell_js.replace("{{UNPACKED_WASM_SIZE}}", str(len(wasm)))
        )

if __name__ == "__main__":
    sys.exit(main(sys.argv))
